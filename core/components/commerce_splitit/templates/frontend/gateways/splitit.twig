<div id="splitit-container" class="splitit-default-ui grouped">
    <div class="splitit-cc-group">
        <div id="card-number"></div>
        <div id="expiration-date"></div>
        <div id="cvv"></div>
        <div class="splitit-cc-group-separator"></div>
    </div>

    <div id="installment-picker"></div>
    <div id="error-box"></div>
    <div id="terms-conditions"></div>
    <div style="display:none;" id="commerce_splitit-btn-pay"></div>
</div>

<script src="{{ js_url }}"></script>
<script>
    var properties = {
        container: "#splitit-container",
        publicToken: "{{ token }}",
        fields: {
            number: {
                selector: "#card-number"
            },
            cvv: {
                selector: "#cvv"
            },
            expirationDate: {
                selector: "#expiration-date"
            }
        },
        installmentPicker: {
            selector: "#installment-picker"
        },
        termsConditions: {
            selector: "#terms-conditions"
        },
        errorBox: {
            selector: "#error-box"
        },
        paymentButton: {
            selector: "#commerce_splitit-btn-pay"
        },
        billingAddress: {
            addressLine: "{{ billing_address.AddressLine }}",
            addressLine2: "{{ billing_address.AddressLine2 }}",
            city: "{{ billing_address.City }}",
            state: "{{ billing_address.State }}",
            country: "{{ billing_address.Country }}",
            zip: "{{ billing_address.Zip }}"
        },
        consumerData: {
            fullName: "{{ consumer_data.FullName }}",
            email: "",
            phoneNumber: "{{ consumer_data.PhoneNumber }}",
            cultureName: "{{ consumer_data.CultureName }}"
        }
    };

    var email = "{{ consumer_data.Email }}";
    // Workaround for ObfuscatedEmail
    var doc = new DOMParser().parseFromString(email, "text/html");
    var parsedEmail = doc.documentElement.textContent;
    properties.consumerData.email = parsedEmail;

    function initializeSplitit() {
        var flexFields = Splitit.FlexFields.setup(properties).ready(function () {
            // Splitit plugin ready - display it.
            flexFields.show();
        }).onSuccess(function (result) {
            // Respond here if payment goes well.
            console.log(result);

            var form = CommercePayments.getForm();

            // Add data to form
            var input = document.createElement("input");
            input.setAttribute("type", "hidden");
            input.setAttribute("name", "splitit_data");
            input.setAttribute("value", JSON.stringify(result));
            form.appendChild(input);

            // Submit after adding the data
            form.submit();
        });
    }

    // Wait until the page has finished loading
    CommercePayments.onReady(initializeSplitit());

    // Listen for submit and hijack the event
    CommercePayments.onSubmit({{ method }}, function (e) {
        var form = CommercePayments.getForm();

        // Make sure Splitit is the selected payment method at time of submit
        if(form.querySelector('#payment-method-{{ method }}').checked) {
            e.preventDefault();
            e.stopPropagation();

            // Activate the hidden Splitit pay button when the main Commerce "Make Payment" button is pressed.
            document.getElementById('commerce_splitit-btn-pay').click();
        }

    });
</script>
